#####################################################################################################
##### NSPANEL ESPHOME created by Blackymas - https://github.com/Blackymas/NSPanel_HA_Blueprint  #####
##### ESPHOME PRE-BUILT                                                                         #####
##### PLEASE only make changes if it is necessary and also the required knowledge is available. #####
##### For normal use with the Blueprint, no changes are necessary.                              #####
#####################################################################################################
---
substitutions:
  device_name: nspanel
  wifi_ssid: nspanel
  wifi_password: NSPanel_Blueprint
  nextion_update_url: "http://github.com/Blackymas/NSPanel_HA_Blueprint/raw/main/nspanel_blank.tft"
  pre_built: "true"

packages:
  core_package: !include ./nspanel_esphome_core.yaml  # Core package
  upload_tft_package: !include ./nspanel_esphome_addon_upload_tft.yaml  # Core package

button:
  - id: !remove tft_update

  - platform: factory_reset
    name: Factory reset
    disabled_by_default: true
    internal: false

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

dashboard_import:
  package_import_url: github://Blackymas/NSPanel_HA_Blueprint/advanced/esphome/nspanel_esphome_prebuilt.yaml  # Must be updated
  import_full_config: false

esp32:
  framework:
    type: esp-idf

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

esphome:
  name_add_mac_suffix: true
  project:
    name: esphome.NSPanel_HA_Blueprint
    version: "${version}"

# Sets up the improv via serial client for Wi-Fi provisioning
improv_serial:

logger:
  baud_rate: 115200

ota:
  password: ""

wifi:
  ap: {}
  power_save_mode: LIGHT  # To make it compatible with BLE
